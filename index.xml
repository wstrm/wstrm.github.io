<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wstrm</title><link>https://wstrm.dev/</link><description>Recent content on wstrm</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright &amp;copy; William Wennerström</copyright><lastBuildDate>Wed, 08 Mar 2023 09:40:00 +0200</lastBuildDate><atom:link href="https://wstrm.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>errors.Join ❤️ defer</title><link>https://wstrm.dev/posts/errors-join-heart-defer/</link><pubDate>Wed, 08 Mar 2023 09:40:00 +0200</pubDate><guid>https://wstrm.dev/posts/errors-join-heart-defer/</guid><description>&lt;p>A common gripe I&amp;rsquo;ve had with Go is that the mantra is &amp;ldquo;you should handle
errors&amp;rdquo;, but at the same time the ergonomics of handling errors from
&lt;code>(io.ReadCloser).Close()&lt;/code> in a &lt;code>defer&lt;/code> call is cumbersome. But fear no more!
With the Go 1.20 release, there&amp;rsquo;s a nifty way to handle this with the new
&lt;a href="https://pkg.go.dev/errors#Join">&lt;code>errors.Join&lt;/code>&lt;/a>.&lt;/p></description></item><item><title>Ignore Git LFS for some remotes</title><link>https://wstrm.dev/posts/ignore-git-lfs-for-remote/</link><pubDate>Thu, 09 Jul 2020 13:51:53 +0200</pubDate><guid>https://wstrm.dev/posts/ignore-git-lfs-for-remote/</guid><description>&lt;p>Here&amp;rsquo;s a neat little snippet I wrote to ignore Git LFS for specific remotes.&lt;/p></description></item><item><title>Upgrade Ubuntu Cosmic (18.10) to Focal (20.04)</title><link>https://wstrm.dev/posts/upgrade-ubuntu-cosmic-to-focal/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://wstrm.dev/posts/upgrade-ubuntu-cosmic-to-focal/</guid><description>&lt;p>There is no supported upgrade path from Ubuntu Cosmic to the new Focal release.
I had an old server running Cosmic (that I picked 18.10 over 18.04 must surely
been an mistake). So let&amp;rsquo;s upgrade Ubuntu to Focal the old school Debian way!&lt;/p></description></item><item><title>OOM killer bad</title><link>https://wstrm.dev/posts/oom_killer_bad/</link><pubDate>Sat, 21 Mar 2020 09:46:45 +0100</pubDate><guid>https://wstrm.dev/posts/oom_killer_bad/</guid><description>Sometimes (read: always) the Linux OOM killer doesn&amp;rsquo;t kill the offending process. Usually, this is because as the system is out of memory, it isn&amp;rsquo;t able to do the memory intensive task of scanning through all the processes. Ironic.
I guess desktop-oriented distributions such as Ubuntu and Fedora tweaks the OOM killer to not do this. More minimal (or meta) distributions like Arch Linux and Gentoo doesn&amp;rsquo;t touch these settings.</description></item><item><title>Eduroam and wpa_supplicant</title><link>https://wstrm.dev/posts/eduroam_and_wpa_supplicant/</link><pubDate>Mon, 24 Feb 2020 11:32:46 +0100</pubDate><guid>https://wstrm.dev/posts/eduroam_and_wpa_supplicant/</guid><description>&lt;p>So, I simply use &lt;code>wpa_supplicant&lt;/code> for WiFi and &lt;code>wpa_cli&lt;/code> for configuration, and
none of that bloated NetworkManager. It works great, but can be hard to get the
configuration right for corporate and university networks.&lt;/p>
&lt;p>Here&amp;rsquo;s a simple configuration for the Eduroam network, that has been verified to
work for LTU (Luleå University of Technology), and several airports in Sweden.
Hopefully it also works at the other universities.&lt;/p></description></item><item><title>Course Project Showcase: Roaster Inc.</title><link>https://wstrm.dev/posts/course-project-showcase-roaster-inc/</link><pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate><guid>https://wstrm.dev/posts/course-project-showcase-roaster-inc/</guid><description>Roast.software home page. During the course Design of Dynamic Web Systems, M7011E at Luleå University of Technoloy, me and another classmate designed and developed a dynamic web system. The project contained both a web server and a dynamic Single Page Application (SPA) front-end. The web server was written in Go from scratch using only the Gorilla libraries for simplifying some parts of the routing. By writing most of the lower level web server logic, such as CSRF token handling, we learned a lot about web server development and the security practices of modern web applications.</description></item><item><title>Better fonts and more symbols with Gentoo</title><link>https://wstrm.dev/posts/better_fonts_and_more_symbols_with_gentoo/</link><pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate><guid>https://wstrm.dev/posts/better_fonts_and_more_symbols_with_gentoo/</guid><description>What do I need? It&amp;rsquo;s really annoying when viewing some random website and all you see is those boxes instead of the actual symbol. So the first thing to do is to install some fonts that support many code points, like Google&amp;rsquo;s Noto. There&amp;rsquo;s also alot of web pages that use Microsoft&amp;rsquo;s Corefonts.
When it comes to the licensing, Google&amp;rsquo;s Noto is under the SIL Open Font License - which is open source - which is nice.</description></item><item><title>Creating the real Hyperboria in the North</title><link>https://wstrm.dev/posts/creating_the_real_hyperboria_in_the_north/</link><pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate><guid>https://wstrm.dev/posts/creating_the_real_hyperboria_in_the_north/</guid><description>&lt;p>&lt;img src="hyperboria-map-with-me-v5.png" alt="This is not the Hyperboria I&amp;amp;rsquo;m talking about">&lt;/p>
&lt;p>Luleå, Sweden, is actually not that far away from Hyperborea.&lt;/p>
&lt;p>&lt;em>Note: I&amp;rsquo;m actually talking about the Cjdns mesh network, Hyperboria, not any
&lt;a href="https://en.wikipedia.org/wiki/Hyperborea" title="Wikipedia: Hyperborea">mythical utopia&lt;/a>.&lt;/em>&lt;/p></description></item><item><title>About</title><link>https://wstrm.dev/about/</link><pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate><guid>https://wstrm.dev/about/</guid><description>It is far better to grasp the universe as it really is than to persist in delusion,&amp;hellip;
Carl Sagan Curriculum Vitae Please have a look in my CV repository.</description></item><item><title>Gentoo with DM-Crypt LUKS and EFI</title><link>https://wstrm.dev/posts/gentoo_with_dm-crypt_luks/</link><pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate><guid>https://wstrm.dev/posts/gentoo_with_dm-crypt_luks/</guid><description>&lt;h2 id="what">What?!&lt;/h2>
&lt;p>This article serves as somekind of meta instruction for installing Gentoo with DM-Crypt LUKS. It&amp;rsquo;s my preferred setup with a Gentoo with OpenRC and EFI running on an encrypted harddrive.&lt;/p>
&lt;p>The guide is heavily based upon &lt;a href="https://wiki.gentoo.org/wiki/Sakaki%28s_EFI_Install_Guide">Sakaki&amp;rsquo;s EFI Install Guide&lt;/a>.&lt;/p>
&lt;p>If this is your first time installing Gentoo it&amp;rsquo;s probably a better idea to follow &lt;a href="https://wiki.gentoo.org/wiki/Sakaki%28s_EFI_Install_Guide">Sakaki&amp;rsquo;s EFI Install Guide&lt;/a>, or follow the &lt;a href="https:/wiki.gentoo.org/wiki/Handbook:AMD64/Full/Installation">Gentoo&amp;rsquo;s Handbook&lt;/a>&lt;/p></description></item></channel></rss>