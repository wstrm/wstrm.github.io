<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>course on wstrm</title><link>https://wstrm.dev/tags/course/</link><description>Recent content in course on wstrm</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright &amp;copy; William Wennerström</copyright><lastBuildDate>Thu, 19 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://wstrm.dev/tags/course/index.xml" rel="self" type="application/rss+xml"/><item><title>Course Project Showcase: Roaster Inc.</title><link>https://wstrm.dev/posts/course-project-showcase-roaster-inc/</link><pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate><guid>https://wstrm.dev/posts/course-project-showcase-roaster-inc/</guid><description>Roast.software home page. During the course Design of Dynamic Web Systems, M7011E at Luleå University of Technoloy, me and another classmate designed and developed a dynamic web system. The project contained both a web server and a dynamic Single Page Application (SPA) front-end. The web server was written in Go from scratch using only the Gorilla libraries for simplifying some parts of the routing. By writing most of the lower level web server logic, such as CSRF token handling, we learned a lot about web server development and the security practices of modern web applications.</description></item></channel></rss>